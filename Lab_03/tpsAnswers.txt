1:
    1. Stack: runtime allocated memory of a known size at compile time, Heap: runtime allocated memory of a unknown size at compile time, Static: compiletime allocated memory that persists for the entire program.
    2. 
        a. 3
        b. The variable "num" is an integer, ptr is an int pointer, and handle is an int double pointer.
        c. The variable "num" is stored on the stack, the int pointer "ptr" is stored on the stack, the int double pointer "handle" is stored on the stack.
        d. It will point to a heap allocated memory location.

2:
    3. The data is stored sequentially in the struct and the node pointer head is adressed to the first value in the struct. Similar to how an array would work but for nammed values.
    
3:
    1.
        a. We must pass the array size to the function so that we may pass it to malloc so that malloc can make a request to the terminal on the amount of memory it needs.
        b. No, because we make a deep copy of the array.
        c. The deep copy of the array is made so that the original may be displayed after the sorting has taken place.