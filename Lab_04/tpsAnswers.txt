1:
    1. It should print "2" as 2 in Hex is still repersented by 2.
    2. I would expect it to print "41" as that is the ASCII value of "A" and the index i is at 0.
    4. It prints "2" then "44434241" and then "2" again. I am surprised by the results but if I were to guess what the problem is that the chars being one byte are being pushed in too the 4 byte int sequentially which result in the first value being strangely large and then the rest of the valeus being unefected.
    5.
        a. There is 1 array allocated in memory
        b. They have the same memory location
    6. There is a difference of 4 between each memory location which comes from the fact that ints take 4 bytes of memory
    8. There is a difference of 1 between each memory adress which comes from the fact that chars take 1 byte of memory
    10. C increments the pointer of an array by the size of the type of the array. So for ints it would be by 4 for chars by 1.

2:
    1. Line 8 creates an array of int pointers of size n.
    2. We increment the pointer then derefrence.
    4. We need to pass in the size of the array so that we don't try to acsess unallocated memory.